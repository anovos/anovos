#input_dataset: ETL configurations of main dataset.
#input_dataset can be renamed but need to change the name in main script as well
#keys of input_dataset are function names (cannot be renamed) & values are function arguments (value can be null to skip except for read_dataset)
#delete_column/select_column: arguments can be in front or under as list_of_cols
#list_of_cols: list or string with multiple columns separated by | (refer doc string for further details)
input_dataset:
  read_dataset:
    file_path: "data/income_dataset/csv"
    file_type: csv
    file_configs:
      header: True
      delimiter: ","
      inferSchema: True
  delete_column: ['logfnl']
  select_column: null
  rename_column:
    list_of_cols: ['marital-status','education-num']
    list_of_newcols: ['marital_status','education_num']
  recast_column:
    list_of_cols: ['age','education_num']
    list_of_dtypes: ['float','float']

concatenate_dataset:
  method: name
  dataset1:
    read_dataset:
      file_path: "data/income_dataset/parquet"
      file_type: parquet
    delete_column: ['logfnl']
    select_column: null
    rename_column:
      list_of_cols: ['marital-status','education-num']
      list_of_newcols: ['marital_status','education_num']
    recast_column:
      list_of_cols: ['age','education_num']
      list_of_dtypes: ['float','float']

  dataset2:
    read_dataset:
      file_path: "data/income_dataset/parquet"
      file_type: parquet
    delete_column: ['logfnl']
    select_column: null
    rename_column:
      list_of_cols: ['marital-status','education-num']
      list_of_newcols: ['marital_status','education_num']
    recast_column:
      list_of_cols: ['age','education_num']
      list_of_dtypes: ['float','float']

join_dataset:
  join_cols: ifa
  join_type: inner
  dataset1:
    read_dataset:
      file_path: "data/income_dataset/join"
      file_type: avro
    delete_column: null
    select_column: null
    rename_column:
      list_of_cols: "age|workclass"
      list_of_newcols: "dupl_age|dupl_workclass"
    recast_column: null

timeseries_analyzer:
  auto_detection: True
  id_col: 'ifa'
  tz_offset: 'local'
  inspection: False
  analysis_level: 'daily'
  max_days: 3600

anovos_basic_report:
  basic_report: True
  report_args:
    id_col: ifa
    label_col: income
    event_label: '>50K'
    skip_corr_matrix: True
    output_path: report_stats

#if anovos_basic_report.basic_report is True, then all configs below are ignored.
stats_generator:
  metric: ['global_summary','measures_of_counts','measures_of_centralTendency','measures_of_cardinality'
            ,'measures_of_percentiles','measures_of_dispersion','measures_of_shape']
  metric_args:
    list_of_cols: all
    drop_cols: ['ifa']

quality_checker:
  duplicate_detection:
    list_of_cols: all
    drop_cols: ['ifa']
    treatment: True

  nullRows_detection:
    list_of_cols: all
    drop_cols: []
    treatment: True
    treatment_threshold: 0.75

  invalidEntries_detection:
    list_of_cols: all
    drop_cols: ['ifa']
    treatment: True
    output_mode: replace

  IDness_detection:
    list_of_cols: all
    drop_cols: ['ifa']
    treatment: True
    treatment_threshold: 0.9

  biasedness_detection:
    list_of_cols: all
    drop_cols: ['income']
    treatment: True
    treatment_threshold: 0.98

  outlier_detection:
    list_of_cols: all
    drop_cols: ['ifa','income']
    detection_side: upper
    detection_configs:
      pctile_lower: 0.05
      pctile_upper: 0.90
      stdev_lower: 3.0
      stdev_upper: 3.0
      IQR_lower: 1.5
      IQR_upper: 1.5
      min_validation: 2
    treatment: True
    treatment_method: value_replacement
    pre_existing_model: False
    model_path: NA
    output_mode: replace

  nullColumns_detection:
    list_of_cols: all
    drop_cols: ['ifa','income']
    treatment: True
    treatment_method: MMM
    treatment_configs:
      method_type: median
      pre_existing_model: False
      model_path: NA
      output_mode: replace


association_evaluator:

  correlation_matrix:
    list_of_cols: all
    drop_cols: ['ifa']

  IV_calculation:
    list_of_cols: all
    drop_cols: ifa
    label_col: income
    event_label: '>50K'
    encoding_configs:
      bin_method: equal_frequency
      bin_size: 10
      monotonicity_check: 0

  IG_calculation:
    list_of_cols: all
    drop_cols: ifa
    label_col: income
    event_label: '>50K'
    encoding_configs:
      bin_method: equal_frequency
      bin_size: 10
      monotonicity_check: 0

  variable_clustering:
    list_of_cols: all
    drop_cols: ifa|income


drift_detector:
  drift_statistics:
    configs:
      list_of_cols: all
      drop_cols: ['ifa','income']
      method_type: all
      threshold: 0.1
      bin_method: equal_range
      bin_size: 10
      pre_existing_source: False
      source_path: NA

    source_dataset:
      read_dataset:
        file_path: "data/income_dataset/source"
        file_type: csv
        file_configs:
          header: True
          delimiter: ","
          inferSchema: True
      delete_column: ['logfnl']
      select_column: null
      rename_column:
        list_of_cols: ['marital-status','education-num']
        list_of_newcols: ['marital_status','education_num']
      recast_column:
        list_of_cols: ['age','education_num']
        list_of_dtypes: ['float','float']

  stability_index:

    configs:
      metric_weightages:
        mean: 0.5
        stddev: 0.3
        kurtosis: 0.2
      existing_metric_path: ''
      appended_metric_path: 'si_metrics'
      threshold: 2

    dataset1:
      read_dataset:
        file_path: "data/income_dataset/stability_index/0"
        file_type: csv
        file_configs:
          header: True
          delimiter: ","
          inferSchema: True

    dataset2:
      read_dataset:
        file_path: "data/income_dataset/stability_index/1"
        file_type: csv
        file_configs:
          header: True
          delimiter: ","
          inferSchema:

    dataset3:
      read_dataset:
        file_path: "data/income_dataset/stability_index/2"
        file_type: csv
        file_configs:
          header: True
          delimiter: ","
          inferSchema: True

    dataset4:
      read_dataset:
        file_path: "data/income_dataset/stability_index/3"
        file_type: csv
        file_configs:
          header: True
          delimiter: ","
          inferSchema: True

    dataset5:
      read_dataset:
        file_path: "data/income_dataset/stability_index/4"
        file_type: csv
        file_configs:
          header: True
          delimiter: ","
          inferSchema: True

    dataset6:
      read_dataset:
        file_path: "data/income_dataset/stability_index/5"
        file_type: csv
        file_configs:
          header: True
          delimiter: ","
          inferSchema: True

    dataset7:
      read_dataset:
        file_path: "data/income_dataset/stability_index/6"
        file_type: csv
        file_configs:
          header: True
          delimiter: ","
          inferSchema: True

    dataset8:
      read_dataset:
        file_path: "data/income_dataset/stability_index/7"
        file_type: csv
        file_configs:
          header: True
          delimiter: ","
          inferSchema: True

    dataset9:
      read_dataset:
        file_path: "data/income_dataset/stability_index/8"
        file_type: csv
        file_configs:
          header: True
          delimiter: ","
          inferSchema: True


report_preprocessing:
  master_path: 'report_stats'
  charts_to_objects:
    list_of_cols: all
    drop_cols: ifa
    label_col: income
    event_label: '>50K'
    bin_method: equal_frequency
    bin_size: 10
    drift_detector: True
    outlier_charts: False
    source_path: "NA"

report_generation:
  master_path: 'report_stats'
  id_col: 'ifa'
  label_col: 'income'
  corr_threshold: 0.4
  iv_threshold: 0.02
  drift_threshold_model: 0.1
  dataDict_path: 'data/income_dataset/data_dictionary.csv'
  metricDict_path: 'data/metric_dictionary.csv'
  final_report_path: 'report_stats'

transformers:
  numerical_mathops:
    feature_transformation:
      list_of_cols: all
      drop_cols: []
      method_type: sqrt

    boxcox_transformation:
      list_of_cols: age|education_num
      drop_cols: []

  numerical_binning:
    attribute_binning:
      list_of_cols: all
      drop_cols: []
      method_type: equal_frequency
      bin_size: 10
      bin_dtype: numerical

  numerical_expression:
    expression_parser:
      list_of_expr: 'log(age) + 1.5|sin(capital-gain)+cos(capital-loss)'

  categorical_outliers:
    outlier_categories:
      list_of_cols: all
      drop_cols: ['ifa','income']
      coverage: 0.9
      max_category: 20

  categorical_encoding:
    # cat_to_num_unsupervised:
    #   list_of_cols: 'all'
    #   drop_cols: ['ifa']
    #   method_type: onehot_encoding

    cat_to_num_supervised:
      list_of_cols: all
      drop_cols: ['ifa']
      label_col: income
      event_label: '>50K'

  numerical_rescaling:
    # normalization:
    #   list_of_cols: all

    # z_standardization:
    #   list_of_cols: all

    IQR_standardization:
      list_of_cols: all


  numerical_latentFeatures:
    PCA_latentFeatures:
      list_of_cols: all
      explained_variance_cutoff: 0.95
      standardization: False
      imputation: True


    # autoencoder_latentFeatures:
    #   list_of_cols: all
    #   reduction_params: 0.5
    #   sample_size: 10000
    #   epochs: 20
    #   batch_size: 256


write_intermediate:
  file_path: "intermediate_data"
  file_type: csv
  file_configs:
    mode: overwrite
    header: True
    delimiter: ","
    inferSchema: True

write_main:
  file_path: "output"
  file_type: parquet
  file_configs:
    mode: overwrite

write_stats:
  file_path: "stats"
  file_type: parquet
  file_configs:
    mode: overwrite
